import os.path
import shutil

from skimage import io
from skimage.metrics import structural_similarity as ssim

from ert.run_models import EnsembleExperiment

# "docs/ert/theory/images/posterior_path.png". # NA
# "docs/ert/about/v9_auto_scale.png" # Not used
# "docs/ert/about/v10_manage_experiments.png" # Ref to a specific version of ert, so will no change
# "docs/ert/about/license-retry.png" # Ref to a spesific version of ert, so will not change
# "docs/ert/about/click-on-stderr.png" # Ref to a spesific version of ert, so will not change
# "docs/ert/about/click-show-details.png" # Ref to a spesific version of ert, so will not change
# "docs/ert/about/v9_update_param.png" # Ref to a spesific version of ert, so will not change
# "docs/ert/img/logo.png" # NA
# "docs/ert/reference/configuration/fig/errf_symmetric_uniform.png" #NA
# "docs/ert/reference/configuration/fig/truncated_ok.png" # NA
# "docs/ert/reference/configuration/fig/const.png" # NA
# "docs/ert/reference/configuration/fig/lognormal.png" # NA
# "docs/ert/reference/configuration/fig/derrf_symmetric_uniform.png" # NA
# "docs/ert/reference/configuration/fig/dunif.png" # NA
# "docs/ert/reference/configuration/fig/loguniform.png" # NA
# "docs/ert/reference/configuration/fig/triangular.png" # NA
# "docs/ert/reference/configuration/fig/derrf_right_skewed.png" # NA
# "docs/ert/reference/configuration/fig/normal.png" # NA
# "docs/ert/reference/configuration/fig/uniform.png" # NA
# "docs/ert/reference/configuration/fig/errf_right_skewed_unimodal.png" # NA
"docs/ert/getting_started/configuration/poly_new/with_observations/plot_obs.png"
"docs/ert/getting_started/configuration/poly_new/with_observations/coeff_a.png"
"docs/ert/getting_started/configuration/poly_new/with_observations/coeff_b.png"
"docs/ert/getting_started/configuration/poly_new/with_observations/coeff_c.png"
"docs/ert/getting_started/configuration/poly_new/minimal/warning.png"
"docs/ert/getting_started/configuration/poly_new/minimal/startdialog.png"
"docs/ert/getting_started/configuration/poly_new/minimal/ert.png"
"docs/ert/getting_started/configuration/poly_new/with_results/plots.png"
"docs/ert/getting_started/configuration/poly_new/with_results/poly_plot.png"
"docs/ert/getting_started/configuration/poly_new/with_more_observations/coeff_b.png"
"docs/ert/getting_started/configuration/poly_new/with_simple_script/ert.png"
"docs/ert/getting_started/updating_parameters/fig/prior_response.png"
"docs/ert/getting_started/updating_parameters/fig/update_report.png"
"docs/ert/getting_started/updating_parameters/fig/prior_params.png"
"docs/ert/getting_started/howto/restart-es-mda.png"
"docs/ert/getting_started/howto/ert_screenshot_adaptive_loc.png"
"docs/everest/images/deter_vs_robust.png"
"docs/everest/images/architecture_design.png"
"docs/everest/images/everest_wf.png"
"docs/everest/images/enopt_objfunc.png"
"docs/everest/images/Everest_vs_Ert_03.png"
"docs/everest/images/Everest_vs_Ert_02.png"
"docs/everest/images/Everest_vs_Ert_01.png"


def gui_has_significant_change(gui, qtbot, current_image_path):
    temp_image_path = qtbot.screenshot(gui)
    new_image = io.imread(temp_image_path, as_gray=True)
    current_image = io.imread(current_image_path, as_gray=True)

    significant_change = True

    if new_image.shape == current_image.shape:
        similarity_index = ssim(
            new_image, current_image, data_range=new_image.max() - new_image.min()
        )

        significant_change = (
            similarity_index <= 0.99999
        )  # This needs to be tuned. Minor changes like temp path is expected.

    if significant_change:
        shutil.move(temp_image_path, current_image_path)

    return significant_change


def test_poly_new_minimal_ert_printscreen(
    opened_main_window_configuration_guide_start,
    run_experiment,
    qtbot,
    source_root,
):
    current_image_path = os.path.join(
        source_root, "docs/ert/getting_started/configuration/poly_new/minimal/ert.png"
    )
    gui = opened_main_window_configuration_guide_start

    significant_gui_updates = []

    if gui_has_significant_change(gui, qtbot, current_image_path):
        significant_gui_updates.append(current_image_path)

    run_experiment(EnsembleExperiment, gui)
    current_image_path = os.path.join(
        source_root,
        "docs/ert/getting_started/configuration/poly_new/minimal/simulations.png",
    )

    if gui_has_significant_change(gui, qtbot, current_image_path):
        significant_gui_updates.append(current_image_path)

    newline = "\n"
    assert not significant_gui_updates, f"""
        One or more auto generated images differed from the image used in the docs

        The image: \n {newline.join(significant_gui_updates)} has been overwritten with the new version.
        If the new version seems correct it should be kept.
        If the autogenerated image seems incorrect the underlying code generating the
        gui might need corrections or this test needs to be fixed.
        """


def test_poly_new_minimal_simulations(
    opened_main_window_poly,
    run_experiment,
    qtbot,
    source_root,
):
    current_image_path = os.path.join(
        source_root,
        "docs/ert/getting_started/configuration/poly_new/minimal/simulations.png",
    )
    gui = opened_main_window_poly
    run_experiment(EnsembleExperiment, gui)

    assert not gui_has_significant_change(gui, qtbot, current_image_path), f"""
        The auto generated image differed from the current image used in the docs

        The image {current_image_path} has been overwritten with the new version.
        If the new version seems correct it should be kept.
        If the autogenerated image seems incorrect the underlying code generating the
        gui might need corrections or this test needs to be fixed.
        """
